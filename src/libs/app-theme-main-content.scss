:where(.app-theme-main-content) {
	> :not(:where(h1,pre)) {
		width: var(--content-width);
	}

	h2 {
		margin-block-start: calc(2 * var(--space));
		font-weight: 700;
	}

	:is(h4, h5, h6) {
		margin-block-end: 0;
	}

	:is(h4, h5, h6) + * {
		margin-block-start: 0;
	}

	:is(h5, h6) {
		font-weight: normal;
		font-style: italic;
	}

	:is(h2,h3,h4,h5,h6) em {
		font-weight: normal;
	}

	@media (min-width: 1500px) {
		h2 { --h2-line-span: 2; }
		h3 { --h3-added-lead: .25; }
	}

	:is(em,cite) :is(em,cite) {
		font-style: normal;
	}

	a {
		text-underline-offset:     .125em;
		text-decoration-thickness: 1px;
		text-decoration-color: hsla(var(--fg-h) var(--fg-s) var(--fg-l) / .5);
	}

	a:hover {
		text-decoration-color: currentColor;
	}

	hr {
		background: transparent;
		// background-image: linear-gradient(-45deg, var(--sep-color), var(--sep-color));
		// background-size: var(--space, 1em);
		box-shadow: 0 0 0 1px;
		width: var(--space, 1em);
		margin: calc(2 * var(--space)) calc(
			var(--content-width) * .5
			- var(--space, 1em) * .5
		);
		transform: rotate(45deg);
	}

	/* Mono font elements */

	:is(code,kbd,samp,small) {
		font-size: .85em;
	}

	:not(pre) > :is(code,kbd,samp,small) {
		font-size: 1.85ex;
	}

	code {
		font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
	}

	:not(:is(h1,pre,a)) > code {
		background: var(--sep-color);
		border-radius: .15rem;
		padding: .15em .25em;
		white-space: normal;
	}

	/* Code block */

	pre {
		hyphens: none;
		overflow: auto;
		padding: 0 var(--space) var(--space) 0;
		position: relative;
		tab-size: 2;
		white-space: pre;
		word-spacing: normal;
		word-break: normal;
		word-wrap: normal;
	}

	:where(pre)::after {
		border-bottom: 1px solid var(--sep-color);
		content: "";
		position: absolute;
		bottom: 0; left: 0;
		width: var(--content-width);
		height: 1px;
	}
}
